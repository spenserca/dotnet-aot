trigger:
  - master

variables:
  # Agents have .NET Core SDKs installed
  # It is recommended to use the latest version of SDK
  dotnetSdkVersion: '8.0.x'

  # Your project's build configuration
  buildConfiguration: 'Release'

  # Name of the Azure resource group
  azureResourceGroup: '<YourAzureResourceGroupName>'

  # Name of the Azure Web App
  azureWebApp: '<YourAzureWebAppName>'

stages:
  - stage: Build
    displayName: 'Build and Test'
    
    jobs:
      - job: 'Build'
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
          - task: UseDotNet@2
            displayName: 'Set .NET Core SDK Version'
            inputs:
              version: $(dotnetSdkVersion)
              performMultiLevelLookup: true

          - task: DotNetCoreCLI@2
            displayName: 'Restore'
            inputs:
              command: 'restore'
              projects: '**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Build'
            inputs:
              projects: '**/*.csproj'
              arguments: '--configuration $(buildConfiguration) --version-suffix "$(Build.BuildNumber)".* --no-restore'

          - task: DotNetCoreCLI@2
            displayName: 'Test'
            inputs:
              command: 'test'
              projects: '**/*Tests/*.csproj'
              arguments: '--configuration $(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: 'Publish'
            inputs:
              command: 'publish'
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: True

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Artifacts'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifact: 'drop'

  - stage: Deploy
    displayName: 'Deploy to Azure'
    dependsOn: Build
    condition: succeeded('Build')
    
    jobs:
      - deployment: 'Deploy'
        pool:
          vmImage: 'ubuntu-latest'
        
        environment: 'Production'
        
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: 'Azure App Service Deploy'
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: '<YourAzureServiceConnectionName>'
                    appType: 'webApp'
                    WebAppName: $(azureWebApp)
                    packageForLinux: '$(Pipeline.Workspace)/drop/**/*.zip'
                    RuntimeStack: 'DOTNETCORE|6.0'